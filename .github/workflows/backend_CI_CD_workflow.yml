# This is a basic workflow to help you get started with Actions

name: Backend CI CD workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This a job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: get sources
        uses: actions/checkout@v3

      - uses: actions/upload-artifact@v3
        with:
          name: sources
          path: Restaurant # or path/to/artifact

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: '6.0.x'

      - name: build
        run: dotnet build Restaurant --configuration release
        
      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: Restaurant

  # This a job called "tests"
  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:

      - uses: actions/download-artifact@v3
        with:
          name: sources
      - run: dotnet build
      - name: run tests for Api
        run: dotnet test "Restaurant.RestApi.Tests/Restaurant.RestApi.Tests.csproj" --no-build --no-restore
  
  # This a job called "deploy" 
  deploy:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }} 
          known_hosts: unnecessary

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        
      - name: Deploy with rsync
        run: rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" . ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/renat/deploymentTarget